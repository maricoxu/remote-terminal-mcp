# Cursor Rules for Remote Terminal MCP Project

## 强制性回归测试要求

### 质量门禁
- 每修复一个问题后，必须无条件执行全量回归测试执行
- 没有回归测试的修复不允许提交
- 回归测试失败的代码不允许合并
- 测试先行原则

### 项目概述
这是一个用于远程终端管理的模块化控制协议(MCP)服务器，提供服务器配置、连接管理和Docker环境设置工具。

## 代码风格和标准
- 使用Python 3.9+语法和功能
- 遵循PEP 8风格指南
- 在适当的地方使用类型提示
- 为所有公共函数和类编写全面的文档字符串
- 使用有意义的变量和函数名

## 测试要求
- 所有新功能必须有相应的测试
- 使用pytest作为测试框架
- 在测试中模拟用户交互以确保自动化
- 保持关键功能的测试覆盖率
- 使用描述性测试名称来解释被测试的场景

## 质量保证
- 回归测试必须覆盖所有关键功能
- 质量保证流程必须严格执行
- 测试先行原则必须遵守
- 代码质量门禁必须通过

## 文件组织
- 将相关功能保存在适当的模块中
- 在配置、交互和业务逻辑之间使用清晰的分离
- 保持一致的导入结构
- 在适当的测试目录中分组相关测试

## 错误处理
- 提供有意义的错误消息
- 使用适当的异常类型
- 优雅地处理边缘情况
- 适当记录错误以便调试

## 文档
- 保持README文件最新
- 记录配置格式和选项
- 提供清晰的使用示例
- 维护版本跟踪的变更日志

## 安全考虑
- 永远不要记录密码等敏感信息
- 验证所有用户输入
- 为配置使用安全默认值
- 小心处理身份验证凭据

## 性能指南
- 在交互场景中优化用户体验
- 最小化不必要的文件I/O操作
- 为配置管理使用高效的数据结构
- 考虑缓存频繁访问的数据

## 集成指南
- 确保MCP协议合规性
- 在可能的情况下保持向后兼容性
- 测试与各种MCP客户端的集成
- 清楚地记录集成要求
