# Remote Terminal MCP 默认配置
# 简单的本地tmux会话管理配置

# 服务器配置
servers:
  # 默认本地会话配置
  local-dev:
    type: "local_tmux"
    description: "本地开发会话"
    
    # tmux会话配置
    session:
      name: "dev-session"                   # 📍 可修改为你喜欢的会话名
      working_directory: "~/Code"           # 📍 可修改为你的工作目录
      shell: "/bin/zsh"                    # 📍 可修改为你的shell（bash/zsh）
      
      # 环境变量（可选）
      environment:
        TERM: "xterm-256color"
        LANG: "en_US.UTF-8"
  
  # 远程服务器配置示例（基于cursor-bridge脚本参数）
  remote-server:
    type: "script_based"
    description: "远程开发服务器"
    
    # 连接配置
    connection:
      tool: "remote-tool"                   # 📍 连接工具
      
      # 跳板机配置（可选）
      jump_host:
        host: ""                            # 📍 跳板机地址，留空则直连
        password: ""                        # 📍 跳板机密码（建议使用密钥）
        
      # 目标服务器
      target:
        host: ""                            # 📍 服务器地址
    
    # Docker容器配置
    docker:
      container_name: "your_container"      # 📍 Docker容器名称
      image: "your_docker_image"            # 📍 Docker镜像
      auto_create: true                     # 自动创建容器
    
    # tmux会话配置
    session:
      name: "remote-session"                # 📍 远程会话名称
      working_directory: "/workspace"       # 📍 工作目录
      shell: "/bin/zsh"                    # 默认shell
      
      # 环境变量
      environment:
        PYTHONPATH: "/workspace:/workspace/src"
        PROJECT_ROOT: "/workspace"
    
    # BOS云存储配置（可选）
    bos:
      access_key: ""                        # 📍 BOS Access Key（可选）
      secret_key: ""                        # 📍 BOS Secret Key（可选）
      bucket: ""                            # 📍 BOS存储桶路径（可选）
      
    # 环境配置选项
    environment_setup:
      auto_setup: true                      # 是否自动配置环境
      quick_connect_mode: true              # 快速连接模式

# 全局设置
global_settings:
  default_server: "local-dev"              # 📍 默认使用本地开发
  connection_timeout: 30
  command_timeout: 300

# 安全配置（本地使用，相对宽松）
security:
  allowed_commands:
    - ".*"  # 本地使用，允许所有命令
  forbidden_commands: []

# ================================================================
# 📚 快速开始：
# ================================================================
# 
# 1️⃣ 本地开发（开箱即用）:
#    npm start  # 自动创建 dev-session
#
# 2️⃣ 配置远程服务器（可选）:
#    编辑 ~/.remote-terminal-mcp/config.yaml
#    修改 remote-server 部分的 📍 标记项
#
# 3️⃣ 在Cursor中使用:
#    "列出所有tmux会话"
#    "在dev-session中执行 pwd"
#    "连接到remote-server"
#
# ================================================================

# ⚡ 设计理念：
# 
# 🎯 本地优先：默认配置本地tmux，无需任何设置
# 🔧 渐进复杂：需要远程时再配置remote-server
# 📁 统一管理：一个配置文件管理所有连接
# 
# ================================================================ 