# 🔧 Remote Terminal MCP 配置模板
# 复制此文件到 ~/.remote-terminal-mcp/config.yaml 并根据实际情况修改

# ================================================================
# 🌟 服务器配置模板
# ================================================================
servers:
  # ================================================================
  # 🏠 本地开发环境（推荐保留）
  # ================================================================
  local-dev:
    type: "local_tmux"
    description: "本地开发会话"
    session:
      name: "dev-session"                    # 📍 修改：会话名
      working_directory: "~/Code"            # 📍 修改：工作目录
      shell: "/bin/zsh"                     # 📍 修改：shell类型
      environment:
        TERM: "xterm-256color"
        LANG: "en_US.UTF-8"

  # ================================================================
  # 🖥️ 简单SSH服务器示例
  # ================================================================
  simple-server:
    type: "script_based"
    description: "简单SSH连接服务器"
    connection:
      tool: "ssh"                           # 使用标准SSH
      mode: "direct"                        # 直连模式
      target:
        host: "your-server.com"             # 📍 修改：服务器地址
        user: "root"                        # 📍 修改：用户名
        # key_file: "~/.ssh/id_rsa"         # 📍 可选：SSH私钥路径
        # password: "your_password"          # 📍 可选：密码（不推荐）
    session:
      name: "simple_dev"                    # 📍 修改：会话名
      working_directory: "/workspace"       # 📍 修改：工作目录
      shell: "/bin/bash"                    # 📍 修改：shell类型

  # ================================================================
  # 🐳 带Docker的高级服务器示例
  # ================================================================
  gpu-server:
    type: "script_based"
    description: "GPU训练服务器 - 自动Docker环境"
    connection:
      tool: "ssh"                           # 或使用 "relay-cli"
      mode: "direct"
      target:
        host: "gpu-cluster.company.com"     # 📍 修改：GPU服务器地址
        user: "admin"                       # 📍 修改：用户名
        key_file: "~/.ssh/gpu_server_key"   # 📍 修改：SSH密钥路径
    docker:
      container_name: "pytorch_env"          # 📍 修改：容器名
      image: "pytorch/pytorch:latest"        # 📍 修改：Docker镜像
      auto_create: true                      # 自动创建容器
      run_options: >-                        # Docker运行参数
        --gpus all
        --privileged
        -v /data:/data
        -v /home:/home
        --shm-size=16g
        --restart=always
    session:
      name: "gpu_training"                   # 📍 修改：会话名
      working_directory: "/workspace"
      shell: "/bin/zsh"
      environment:
        CUDA_VISIBLE_DEVICES: "0,1"         # 📍 修改：GPU设备
        PYTHONPATH: "/workspace:/workspace/src"
    environment_setup:
      auto_setup: true                       # 启用自动环境配置
      quick_connect_mode: true               # 快速连接模式

  # ================================================================
  # 🌐 relay-cli连接示例（百度内网）
  # ================================================================
  internal-server:
    type: "script_based"
    description: "内网服务器 - relay-cli连接"
    connection:
      tool: "relay-cli"                      # 使用relay-cli
      mode: "direct"                         # 直连模式
      target:
        host: "internal-gpu-01.domain"      # 📍 修改：内网服务器地址
        user: "root"                        # 📍 修改：用户名
    docker:
      container_name: "dev_env"             # 📍 修改：容器名
      image: "ubuntu:20.04"                 # 📍 修改：镜像
      auto_create: true
      run_options: "--privileged -v /data:/data"
    session:
      name: "internal_dev"                  # 📍 修改：会话名
      working_directory: "/workspace"
      shell: "/bin/zsh"
    bos:                                     # 📍 可选：BOS云存储配置
      access_key: "your_bos_access_key"     # 📍 修改：BOS访问密钥
      secret_key: "your_bos_secret_key"     # 📍 修改：BOS密钥
      bucket: "bos://your-bucket/config"    # 📍 修改：BOS桶路径

  # ================================================================
  # 🌊 跳板机连接示例
  # ================================================================
  jump-host-server:
    type: "script_based"
    description: "通过跳板机访问的服务器"
    connection:
      tool: "relay-cli"                      # 或使用SSH
      mode: "jump_host"                      # 跳板机模式
      jump_host:
        host: "user@jump.company.com"       # 📍 修改：跳板机地址
        password: "jump_password"            # 📍 修改：跳板机密码
        # key_file: "~/.ssh/jump_key"        # 📍 可选：跳板机SSH密钥
      target:
        host: "private-server-01"            # 📍 修改：目标服务器
        user: "root"                        # 📍 修改：目标用户
    docker:
      container_name: "private_dev"         # 📍 修改：容器名
      image: "custom/dev-env:latest"        # 📍 修改：自定义镜像
      auto_create: true
    session:
      name: "private_dev"                   # 📍 修改：会话名
      working_directory: "/workspace"
      shell: "/bin/zsh"

# ================================================================
# ⚙️ 全局设置
# ================================================================
global_settings:
  default_server: "local-dev"               # 📍 修改：默认服务器
  connection_timeout: 30                    # 连接超时时间（秒）
  command_timeout: 300                      # 命令超时时间（秒）
  max_retries: 3                           # 最大重试次数
  
  # 🚀 智能预连接设置（可选）
  auto_preconnect: false                    # 📍 修改：是否启用预连接
  preconnect_servers:                       # 📍 修改：预连接服务器列表
    - "local-dev"                          # 本地开发（推荐保留）
    # - "gpu-server"                       # 取消注释以启用
    # - "internal-server"                  # 取消注释以启用
  preconnect_timeout: 60                    # 预连接总超时时间
  preconnect_parallel: 3                   # 并行预连接数量

# ================================================================
# 🔒 安全配置
# ================================================================
security:
  # 允许的命令（正则表达式）
  allowed_commands:
    - ".*"                                  # 📍 生产环境建议限制
  
  # 禁止的命令
  forbidden_commands:
    # - "rm -rf /"                         # 取消注释以禁用危险命令
    # - "format.*"                         # 取消注释以禁用格式化
  
  # 需要确认的命令
  require_confirmation:
    - "rm -rf"                             # 递归删除需要确认
    - "docker rm"                          # 删除容器需要确认
    - "shutdown"                           # 关机需要确认
    - "reboot"                             # 重启需要确认

# ================================================================
# 📚 配置说明
# ================================================================
# 
# 🎯 快速开始：
# 1. 复制此文件到 ~/.remote-terminal-mcp/config.yaml
# 2. 根据实际情况修改带有 "📍 修改" 标记的字段
# 3. 删除不需要的服务器配置
# 4. 在Cursor中说 "列出所有远程服务器" 测试配置
# 
# 🔧 服务器类型说明：
# - local_tmux: 本地tmux会话（推荐保留）
# - script_based: 远程服务器（支持Docker、BOS等功能）
# 
# 🐳 Docker配置说明：
# - auto_create: true 表示自动创建和管理Docker容器
# - run_options: Docker运行参数，根据需要添加GPU、挂载等
# 
# 🌐 连接模式说明：
# - direct: 直接连接
# - jump_host: 通过跳板机连接
# 
# 🔧 连接工具说明：
# - ssh: 标准SSH连接
# - relay-cli: 百度内网relay-cli工具
# 
# ☁️ BOS配置说明：
# - 用于同步开发环境配置文件（.zshrc, SSH密钥等）
# - 需要有效的BOS访问凭证
# 
# 🚀 预连接功能：
# - 启动时自动连接常用服务器，提高响应速度
# - 适合稳定的内网环境
# 
# 📞 获取帮助：
# - 查看 docs/CONFIGURATION_GUIDE.md 获取详细配置说明
# - 在Cursor中说 "检查服务器配置" 验证配置正确性
# 
# ================================================================ 